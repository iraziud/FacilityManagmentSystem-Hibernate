<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<bean id="facilityUsage" class="com.fms.service.FacilityUsage">
		<property name="personService" ref="personService" />
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="maintenanceUsage" class="com.fms.service.MaintenanceUsage">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="facilityUsage" ref="facilityUsage" />
	</bean>

	<bean id="personService" class="com.fms.service.PersonServiceImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="dataCreator" class="com.fms.main.DataCreator">
	</bean>

	<!-- For all the value objects -->
	<bean id="address" class="com.fms.model.Address" scope="prototype"/>
	<bean id="facility" class="com.fms.model.Facility" scope="prototype"/>
	<bean id="floors" class="com.fms.model.Floors" scope="prototype"/>
	<bean id="inspection" class="com.fms.model.Inspection" scope="prototype"/>
	<bean id="maintenance" class="com.fms.model.Maintenance" scope="prototype"/>
	<bean id="person" class="com.fms.model.Person" scope="prototype"/>
	<bean id="phone" class="com.fms.model.Phone" scope="prototype"/>
	<bean id="unit" class="com.fms.model.Unit" scope="prototype"/>

	<!-- This code connects to Heroku MySQL ClearDB -->
	<bean class="java.net.URI" id="dbUrl">
    	<constructor-arg value="#{systemEnvironment['CLEARDB_DATABASE_URL']}"/>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="#{ 'jdbc:mysql://' + @dbUrl.getHost() + @dbUrl.getPath() }" />
		<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
		<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
	</bean>

	<!-- Use this for local H2 testing -->
	<!-- 
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:mem" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>
	 -->

	<!-- Use this for local MySQL testing -->
	<!-- 
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost/fms" />
		<property name="username" value="root" />
		<property name="password" value="pa55w0rd" />
	</bean>
	 -->

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="hibernate.cfg.xml" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager" p:sessionFactory-ref="sessionFactory">
	</bean>
	
	<!-- AOP for transaction management -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- Enable on all service classes -->
	<aop:config>
		<aop:pointcut id="serviceUsageOperation" expression="execution(* com.fms.service.*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceUsageOperation" />
	</aop:config>

</beans>
